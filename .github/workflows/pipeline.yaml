name: Build and Containerize Vite React App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      # Install dependencies and build the app
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vite-react-build
          path: dist/**

  containerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Checkout the repository (optional for Dockerfile context)
      - name: Checkout code
        uses: actions/checkout@v3

      # Download build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: vite-react-build

      # Build Docker image
      - name: Build Docker image
        run: |
          export DOCKER_DEFAULT_PLATFORM=linux/arm64
          docker build -t ghcr.io/geoshoouh/gf-ui-server:latest .

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io/geoshoouh -u geoshoouh --password-stdin
  
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/geoshoouh/gf-ui-server
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
  
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
